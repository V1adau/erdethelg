{"version":3,"sources":["utils/timeUtils.js","utils/text.js","AnswerNo.js","AnswerSoon.js","AnswerYes.js","Answer.js","CountdownLabel.js","Countdown.js","TimeLeft.js","App.js","serviceWorker.js","index.js"],"names":["answerEnum","isItWeekend","now","Date","weekendTime","timeLeft","getDay","deadline","getWeekendStartDay","sameDay","isSameDay","getTime","timeRemaining","getTimeRemaining","sumRemaining","dayOfWeek","hours","minutes","undefined","resultDate","setDate","getDate","setHours","endTime","t","parse","seconds","Math","floor","days","date1","date2","getMonth","getFullYear","padNumber","number","slice","text","AnswerNo","className","AnswerSoon","AnswerYes","getAnswer","Answer","CountdownLabel","label","Countdown","answer","getTimeLeftPre","getTimeLeftPost","TimeLeft","confettiSettings","max","size","animate","props","colors","clock","rotate","App","useState","setAnswer","useEffect","interval","setInterval","clearInterval","confetti","ConfettiGenerator","render","clear","confettiVisible","id","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6KAAaA,EACN,MADMA,EAEP,KAFOA,EAGL,OAGKC,EAAc,WACzB,IAAMC,EAAM,IAAIC,KAEVC,EAAc,CAClBH,YAAaD,EACbK,SAAU,MAIZ,GAAqB,IAAjBH,EAAII,UAAmC,IAAjBJ,EAAII,SAC5B,OAAOF,EAGT,IAAMG,EAAWC,IACXC,EAAUC,EAAUR,EAAKK,GAE/B,GAAIE,GAAWF,EAASI,WAAaT,EAAIS,UACvC,OAAOP,EAGT,IAAMQ,EAAgBC,EAAiBN,GAEvC,OAAIO,EAAaF,IAAkB,IAInCR,EAAYC,SAAWO,EAGrBR,EAAYH,YADVQ,EACwBT,EAEAA,GARnBI,GAcLI,EAAqB,SAACO,EAAWC,EAAOC,QAC1BC,IAAdH,IACFA,EAAY,QAGAG,IAAVF,IACFA,EAAQ,SAGME,IAAZD,IACFA,EAAU,GAGZ,IAAME,EAAa,IAAIhB,KAMvB,OALAgB,EAAWC,QACTD,EAAWE,WAAc,EAAIN,EAAYI,EAAWb,UAAY,GAElEa,EAAWG,SAASN,EAAOC,EAAS,EAAG,GAEhCE,GAGHN,EAAmB,SAAAU,GACvB,IAAMC,EAAIrB,KAAKsB,MAAMF,GAAW,IAAIpB,KAC9BuB,EAAUC,KAAKC,MAAOJ,EAAI,IAAQ,IAClCP,EAAUU,KAAKC,MAAOJ,EAAI,IAAO,GAAM,IACvCR,EAAQW,KAAKC,MAAOJ,EAAC,KAAuB,IAElD,MAAO,CACLK,KAFWF,KAAKC,MAAMJ,EAAC,OAGvBR,MAAOA,EACPC,QAASA,EACTS,QAASA,IAIPhB,EAAY,SAACoB,EAAOC,GACxB,OACED,EAAMT,YAAcU,EAAMV,WAC1BS,EAAME,aAAeD,EAAMC,YAC3BF,EAAMG,gBAAkBF,EAAME,eAI5BnB,EAAe,SAAAF,GAAa,OAChCA,EAAcc,QACdd,EAAcK,QACdL,EAAcI,MACdJ,EAAciB,MAEHK,EAAY,SAAAC,GAAM,OAAK,IAAMA,GAAQC,OAAO,IC7F5CC,EACP,MADOA,EAEL,uBAFKA,EAGN,eAHMA,EAIJ,mBAJIA,EAKH,oBALGA,EAMF,cANEA,EAOD,kBAPCA,EAQL,QARKA,EASJ,QATIA,EAUF,WAVEA,EAWF,W,OCNIC,EAFE,kBAAM,oBAAIC,UAAU,aAAd,SAA4BF,KCEpCG,EAFI,kBAAM,oBAAID,UAAU,eAAd,SAA8BF,KCExCI,EAFG,kBAAM,oBAAIF,UAAU,cAAd,SAA6BF,KCO/CK,EAAY,SAAAzC,GAChB,OAAQA,GACN,KAAKD,EACH,OAAO,cAAC,EAAD,IACT,KAAKA,EACH,OAAO,cAAC,EAAD,IACT,KAAKA,EACH,OAAO,cAAC,EAAD,IACT,QACE,OAAO,OAIE2C,EAjBA,SAAC,GAAD,IAAG1C,EAAH,EAAGA,YAAH,OACb,qBAAKsC,UAAU,SAAf,SAAyBG,EAAUzC,MCEtB2C,EAPQ,SAAC,GAAD,IAAGvC,EAAH,EAAGA,SAAUwC,EAAb,EAAaA,MAAb,OACrB,sBAAKN,UAAU,kBAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAoClC,IACpC,qBAAKkC,UAAU,mBAAf,SAAmCM,QC2BxBC,EA3BG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAAIA,EAAO9C,cAAgBD,EAClB,KAIP,sBAAKuC,UAAU,YAAf,UACGQ,EAAO1C,SAASwB,KAAO,GACtB,cAAC,EAAD,CAAgBxB,SAAU0C,EAAO1C,SAASwB,KAAMgB,MAAOR,IAGzD,cAAC,EAAD,CACEhC,SAAU6B,EAAUa,EAAO1C,SAASW,OACpC6B,MAAOR,IAET,cAAC,EAAD,CACEhC,SAAU6B,EAAUa,EAAO1C,SAASY,SACpC4B,MAAOR,IAET,cAAC,EAAD,CACEhC,SAAU6B,EAAUa,EAAO1C,SAASqB,SACpCmB,MAAOR,QCXTW,EAAiB,SAAA/C,GACrB,OAAQA,GACN,KAAKD,EACH,OAAO,6BAAKqC,IACd,KAAKrC,EACH,OAAO,6BAAKqC,IACd,KAAKrC,EAEL,QACE,OAAO,OAIPiD,EAAkB,SAAAhD,GACtB,OAAQA,GACN,KAAKD,EACH,OAAO,6BAAKqC,IACd,KAAKrC,EACH,OAAO,6BAAKqC,IACd,KAAKrC,EAEL,QACE,OAAO,OAIEkD,EApCE,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OAClB,OACE,sBAAKR,UAAU,mBAAf,UACGS,EAAeD,EAAO9C,aACvB,cAAC,EAAD,CAAW8C,OAAQA,IAClBE,EAAgBF,EAAO9C,iB,OCJxBkD,EAAmB,CACvBC,IAAK,KACLC,KAAM,IACNC,SAAS,EACTC,MAAO,CAAC,SAAU,SAAU,WAAY,QACxCC,OAAQ,CACN,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,GAAI,KACV,CAAC,EAAG,IAAK,KACT,CAAC,IAAK,IAAK,MAEbC,MAAO,KACPC,QAAQ,GAqCKC,EAlCH,WACV,MAA4BC,mBAAS3D,KAArC,mBAAO8C,EAAP,KAAec,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,EAAU5D,OACT,KACH,OAAO,kBAAMgE,cAAcF,MAC1B,IAEHD,qBAAU,WACR,IAAMI,EAAW,IAAIC,IAAkBhB,GAGvC,OAFAe,EAASE,SAEF,kBAAMF,EAASG,WACrB,IAEH,IAAMC,EACJvB,EAAO9C,cAAgBD,EAAiB,iBAAmB,GAE7D,OACE,sBAAKuC,UAAU,MAAf,UACE,wBACEA,UAAW,kBAAoB+B,EAC/BC,GAAG,oBAEL,yBAAQhC,UAAU,aAAlB,UACE,cAAC,EAAD,CAAQtC,YAAa8C,EAAO9C,cAC5B,cAAC,EAAD,CAAU8C,OAAQA,WCrCNyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAST,OAAO,cAAC,EAAD,IAASU,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c198df80.chunk.js","sourcesContent":["export const answerEnum = {\n  YES: \"yes\",\n  NO: \"no\",\n  SOON: \"soon\"\n};\n\nexport const isItWeekend = () => {\n  const now = new Date();\n\n  const weekendTime = {\n    isItWeekend: answerEnum.YES,\n    timeLeft: null\n  };\n\n  // Is it saturday or sunday?\n  if (now.getDay() === 6 || now.getDay() === 0) {\n    return weekendTime;\n  }\n\n  const deadline = getWeekendStartDay();\n  const sameDay = isSameDay(now, deadline);\n\n  if (sameDay && deadline.getTime() <= now.getTime()) {\n    return weekendTime;\n  }\n\n  const timeRemaining = getTimeRemaining(deadline);\n\n  if (sumRemaining(timeRemaining) <= 0) {\n    return weekendTime;\n  }\n\n  weekendTime.timeLeft = timeRemaining;\n\n  if (sameDay) {\n    weekendTime.isItWeekend = answerEnum.SOON;\n  } else {\n    weekendTime.isItWeekend = answerEnum.NO;\n  }\n\n  return weekendTime;\n};\n\nconst getWeekendStartDay = (dayOfWeek, hours, minutes) => {\n  if (dayOfWeek === undefined) {\n    dayOfWeek = 5;\n  }\n\n  if (hours === undefined) {\n    hours = 16;\n  }\n\n  if (minutes === undefined) {\n    minutes = 0;\n  }\n\n  const resultDate = new Date();\n  resultDate.setDate(\n    resultDate.getDate() + ((7 + dayOfWeek - resultDate.getDay()) % 7)\n  );\n  resultDate.setHours(hours, minutes, 0, 0);\n\n  return resultDate;\n};\n\nconst getTimeRemaining = endTime => {\n  const t = Date.parse(endTime) - new Date();\n  const seconds = Math.floor((t / 1000) % 60);\n  const minutes = Math.floor((t / 1000 / 60) % 60);\n  const hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n  const days = Math.floor(t / (1000 * 60 * 60 * 24));\n  return {\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds\n  };\n};\n\nconst isSameDay = (date1, date2) => {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n};\n\nconst sumRemaining = timeRemaining =>\n  timeRemaining.seconds +\n  timeRemaining.minutes +\n  timeRemaining.hours +\n  timeRemaining.days;\n\nexport const padNumber = number => (\"0\" + number).slice(-2);\n","export const text = {\n  no: \"NEI\",\n  soon: \"Det nÃ¦rmer seg...\",\n  yes: \"DET ER HELG!\",\n  noPre: \"Det er fremdeles\",\n  noPost: \"igjen til helg...\",\n  soonPre: \"Det er bare\",\n  soonPost: \"igjen til helg!\",\n  days: \"Dager\",\n  hours: \"Timer\",\n  minutes: \"Minutter\",\n  seconds: \"Sekunder\"\n};\n","import React from \"react\";\nimport {text} from \"./utils/text\";\n\nconst AnswerNo = () => <h1 className=\"no fade-in\">{text.no}</h1>;\n\nexport default AnswerNo;\n","import React from \"react\";\nimport {text} from \"./utils/text\";\n\nconst AnswerSoon = () => <h1 className=\"soon fade-in\">{text.soon}</h1>;\n\nexport default AnswerSoon;\n","import React from \"react\";\nimport {text} from \"./utils/text\";\n\nconst AnswerYes = () => <h1 className=\"yes fade-in\">{text.yes}</h1>;\n\nexport default AnswerYes;\n","import React from \"react\";\nimport { answerEnum } from \"./utils/timeUtils\";\nimport AnswerNo from \"./AnswerNo\";\nimport AnswerSoon from \"./AnswerSoon\";\nimport AnswerYes from \"./AnswerYes\";\n\nconst Answer = ({ isItWeekend }) => (\n  <div className=\"answer\">{getAnswer(isItWeekend)}</div>\n);\n\nconst getAnswer = isItWeekend => {\n  switch (isItWeekend) {\n    case answerEnum.NO:\n      return <AnswerNo />;\n    case answerEnum.SOON:\n      return <AnswerSoon />;\n    case answerEnum.YES:\n      return <AnswerYes/>;\n    default:\n      return null;\n  }\n};\n\nexport default Answer;\n","import React from \"react\";\n\nconst CountdownLabel = ({ timeLeft, label }) => (\n  <div className=\"clock-container\">\n    <span className=\"days clock-label\">{timeLeft}</span>\n    <div className=\"clock-small-text\">{label}</div>\n  </div>\n);\n\nexport default CountdownLabel;\n","import React from \"react\";\nimport { answerEnum, padNumber } from \"./utils/timeUtils\";\nimport CountdownLabel from \"./CountdownLabel\";\nimport {text} from \"./utils/text\";\n\nconst Countdown = ({ answer }) => {\n  if (answer.isItWeekend === answerEnum.YES) {\n    return null;\n  }\n\n  return (\n    <div className=\"countdown\">\n      {answer.timeLeft.days > 0 && (\n        <CountdownLabel timeLeft={answer.timeLeft.days} label={text.days} />\n      )}\n\n      <CountdownLabel\n        timeLeft={padNumber(answer.timeLeft.hours)}\n        label={text.hours}\n      />\n      <CountdownLabel\n        timeLeft={padNumber(answer.timeLeft.minutes)}\n        label={text.minutes}\n      />\n      <CountdownLabel\n        timeLeft={padNumber(answer.timeLeft.seconds)}\n        label={text.seconds}\n      />\n    </div>\n  );\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport { answerEnum } from \"./utils/timeUtils\";\nimport {text} from \"./utils/text\";\nimport Countdown from \"./Countdown\";\n\nconst TimeLeft = ({ answer }) => {\n  return (\n    <div className=\"timeLeft fade-in\">\n      {getTimeLeftPre(answer.isItWeekend)}\n      <Countdown answer={answer} />\n      {getTimeLeftPost(answer.isItWeekend)}\n    </div>\n  );\n};\n\nconst getTimeLeftPre = isItWeekend => {\n  switch (isItWeekend) {\n    case answerEnum.NO:\n      return <h3>{text.noPre}</h3>;\n    case answerEnum.SOON:\n      return <h3>{text.soonPre}</h3>;\n    case answerEnum.YES:\n      return null;\n    default:\n      return null;\n  }\n};\n\nconst getTimeLeftPost = isItWeekend => {\n  switch (isItWeekend) {\n    case answerEnum.NO:\n      return <h3>{text.noPost}</h3>;\n    case answerEnum.SOON:\n      return <h3>{text.soonPost}</h3>;\n    case answerEnum.YES:\n      return null;\n    default:\n      return null;\n  }\n};\n\nexport default TimeLeft;\n","import React, { useState, useEffect } from \"react\";\nimport Answer from \"./Answer\";\nimport { answerEnum, isItWeekend } from \"./utils/timeUtils\";\nimport TimeLeft from \"./TimeLeft\";\nimport ConfettiGenerator from \"confetti-js\";\n\nconst confettiSettings = {\n  max: \"30\",\n  size: \"1\",\n  animate: true,\n  props: [\"circle\", \"square\", \"triangle\", \"line\"],\n  colors: [\n    [165, 104, 246],\n    [230, 61, 135],\n    [0, 199, 228],\n    [253, 214, 126]\n  ],\n  clock: \"30\",\n  rotate: true\n};\n\nconst App = () => {\n  const [answer, setAnswer] = useState(isItWeekend());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnswer(isItWeekend());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const confetti = new ConfettiGenerator(confettiSettings);\n    confetti.render();\n\n    return () => confetti.clear();\n  }, []);\n\n  const confettiVisible =\n    answer.isItWeekend !== answerEnum.YES ? \"hiddenConfetti\" : \"\";\n\n  return (\n    <div className=\"App\">\n      <canvas\n        className={\"confettiHolder \" + confettiVisible}\n        id=\"confetti-holder\"\n      />\n      <header className=\"App-header\">\n        <Answer isItWeekend={answer.isItWeekend} />\n        <TimeLeft answer={answer} />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}